# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu -l 15 -nf '#ECEFF4' -sb '#434C5E' -sf '#ECEFF4' -nb '#3B4252' | xargs swaymsg exec --

# TODO: make this use an open term instead of launching one, fix piping to swaymsg
# for_window [app_id="^launcher$"] floating enable, sticky enable, resize set 60 ppt 80 ppt, border pixel 10
# set $menu exec $term --class=launcher -e /usr/bin/sway-launcher-desktop | xargs swaymsg exec --

# set $menu wofi -S run
set $menu_apps wofi -S drun
default_border none
# cursor theme
# set $xcursor_theme Breeze_Snow
seat seat0 xcursor_theme "Breeze_Snow"



#    /=================\
# -=|     Aesthetic     |=-
#    \=================/

# font pango:Fira Code Regular 11
font pango:Iosevka Term SS05 11
### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/wallpapers/arch-nord-hd.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# default layout
workspace_layout tabbed

  #colors nord             border   bg       fg       indicator  view_border
  client.focused           #ECEFF4  #434C5E  #ECEFF4  #8FBCBB    #ECEFF4
  client.focused_inactive  #3B4252  #3B4252  #D8DEE9  #8FBCBB    #3B4252
  client.unfocused         #3B4252  #3B4252  #D8DEE9  #8FBCBB    #3B4252
  client.urgent            #BF616A  #434C5E  #ECEFF4  #8FBCBB    #BF616A

# #colors gruvbox          border   bg       fg       indicator  view_border
# client.focused           #fbf1c7  #282828  #ebdbb2  #8ec07c    #fbf1c7
# client.focused_inactive  #3c3836  #282828  #a89984  #8ec07c    #282828
# client.unfocused         #3c3836  #282828  #a89984  #8ec07c    #282828
# client.urgent            #fb4934  #282828  #ebdbb2  #8ec07c    #fb4934

# default border style
default_border pixel 2
default_floating_border pixel 2
hide_edge_borders --i3 smart
title_align center

focus_on_window_activation focus


### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.



### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
#
input "type:keyboard" {
    # xkb_file ~/.config/us-keymap
    xkb_layout usmod,ara
    # xkb_variant ,nodeadkeys,
    xkb_options grp:shift_caps_toggle,caps:escape,compose:rctrl
    xkb_numlock enabled
    repeat_delay 250
    repeat_rate 20
}

input "type:touchpad" {
    tap enabled
}
# Read `man 5 sway-input` for more information about this section.



#    /=================\
# -=|    Keybindings    |=-
#    \=================/

  # Genrally:
  #----------

    # Reload the configuration file
    bindsym $mod+Shift+parenleft reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Control+parenright swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # Volume
    bindsym XF86AudioLowerVolume exec pamixer -d 5
    bindsym XF86AudioRaiseVolume exec pamixer -i 5
    bindsym XF86AudioMute exec pamixer -t
    # alternative keys
    bindsym $mod+9     exec --no-startup-id pamixer -d 5
    bindsym $mod+0     exec --no-startup-id pamixer -i 5
    bindsym $mod+equal exec --no-startup-id pamixer -t

    # Brightness
    bindsym XF86MonBrightnessDown exec brightnessctl s 5%-
    bindsym XF86MonBrightnessUp exec brightnessctl s +5%
    # alt keys
    bindsym $mod+Shift+9   exec brightnessctl s 5%-
    bindsym $mod+Shift+0   exec brightnessctl s +5%
    bindsym $mod+Control+9 exec brightnessctl s 0%
    bindsym $mod+Control+0 exec brightnessctl s 100%

    # Screenshot 
    bindsym $mod+z exec grimshot copy screen && wl-paste -t image > "$HOME/Pictures/screenshots/$(date '+%F-%H-%M-%S').png"
    # TODO: Add a screenshot menu

  # App Launches:
  #--------------

    # Start a terminal
    bindsym $mod+Return exec $term
    # Start your launcher
    bindsym $mod+Shift+d exec $menu
    bindsym $mod+Shift+x exec $menu_apps

  # Controlling Windows:
  #---------------------

    # Kill focused window
    bindsym $mod+Shift+a kill

    #
    # Moving around:
    # Move your focus around
    #

      bindsym $mod+$left focus left
      bindsym $mod+$down focus down
      bindsym $mod+$up focus up
      bindsym $mod+$right focus right
      # Or use $mod+[up|down|left|right]
      bindsym $mod+Left focus left
      bindsym $mod+Down focus down
      bindsym $mod+Up focus up
      bindsym $mod+Right focus right

      # Move the focused window with the same, but add Shift
      bindsym $mod+Shift+$left move left
      bindsym $mod+Shift+$down move down
      bindsym $mod+Shift+$up move up
      bindsym $mod+Shift+$right move right
      # Ditto, with arrow keys
      bindsym $mod+Shift+Left move left
      bindsym $mod+Shift+Down move down
      bindsym $mod+Shift+Up move up
      bindsym $mod+Shift+Right move right
      # Drag floating windows by holding down $mod and left mouse button.
      # Resize them with right mouse button + $mod.
      # Despite the name, also works for non-floating windows.
      # Change normal to inverse to use left mouse button for resizing and right
      # mouse button for dragging.
      floating_modifier $mod normal

    #
    # Layout stuff:
    #

        # You can "split" the current object of your focus with
        # $mod+b or $mod+v, for horizontal and vertical splits
        # respectively.
        bindsym $mod+b splith
        bindsym $mod+Shift+v splitv

        # Switch the current container between different layout styles
        bindsym $mod+Shift+s layout stacking
        bindsym $mod+Shift+w layout tabbed
        bindsym $mod+Shift+e layout toggle split

        # Make the current focus fullscreen
        bindsym $mod+Shift+f fullscreen

        # Toggle the current focus between tiling and floating mode
        bindsym $mod+Shift+space floating toggle

        # Swap focus between the tiling area and the floating area
        bindsym $mod+space focus mode_toggle

        # Move focus to the parent container
        # bindsym $mod+a focus parent

    #
    # Scratchpad:
    #
        # Sway has a "scratchpad", which is a bag of holding for windows.
        # You can send windows there and get them back later.

        # Move the currently focused window to the scratchpad
        bindsym $mod+Shift+minus move scratchpad

        # Show the next scratchpad window or hide the focused scratchpad window.
        # If there are multiple scratchpad windows, this command cycles through them.
        bindsym $mod+minus scratchpad show

    #
    # Resizing containers:
    #

    mode "resize" {
        # left will shrink the containers width
        # right will grow the containers width
        # up will shrink the containers height
        # down will grow the containers height
        bindsym $left resize shrink width 10px
        bindsym $down resize grow height 10px
        bindsym $up resize shrink height 10px
        bindsym $right resize grow width 10px

        # Ditto, with arrow keys
        bindsym Left resize shrink width 10px
        bindsym Down resize grow height 10px
        bindsym Up resize shrink height 10px
        bindsym Right resize grow width 10px

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+Shift+r mode "resize"

  
  # Workspaces:
  #------------

      # Switch to workspace
      bindsym $mod+q workspace 1
      bindsym $mod+w workspace 2
      bindsym $mod+e workspace 3
      bindsym $mod+r workspace 4
      bindsym $mod+a workspace 5
      bindsym $mod+s workspace 6
      bindsym $mod+d workspace 7
      bindsym $mod+f workspace 8
      bindsym $mod+c workspace 9
      bindsym $mod+v workspace 10
      bindsym $mod+1 workspace 11
      bindsym $mod+2 workspace 12
      bindsym $mod+3 workspace 13

      # Move focused container to workspace
      bindsym $mod+Control+q move container to workspace 1
      bindsym $mod+Control+w move container to workspace 2
      bindsym $mod+Control+e move container to workspace 3
      bindsym $mod+Control+r move container to workspace 4
      bindsym $mod+Control+a move container to workspace 5
      bindsym $mod+Control+s move container to workspace 6
      bindsym $mod+Control+d move container to workspace 7
      bindsym $mod+Control+f move container to workspace 8
      bindsym $mod+Control+c move container to workspace 9
      bindsym $mod+Control+v move container to workspace 10
      bindsym $mod+Shift+1 move container to workspace 11
      bindsym $mod+Shift+2 move container to workspace 12
      bindsym $mod+Shift+3 move container to workspace 13
      # Note: workspaces can have any name you want, not just numbers.
      # We just use 1-10 as the default.

#________________________________________________________________________________


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    #position top

    ## When the status_command prints a new line to stdout, swaybar updates.
    ## The default just shows the current date and time.
    #swaybar_command polybar example
    #status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    #colors {
    #    statusline #ffffff
    #    background #323232
    #    inactive_workspace #32323200 #32323200 #5c5c5c
    #}
}

# init polkit
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# init mako, the notification daemon
exec mako >> /home/vex/mako.log

# init kdeconnect 
exec /usr/lib/kdeconnectd
exec kdeconnect-indicator

#include /etc/sway/config.d/*


set $gnome-schema org.gnome.desktop.interface
exec_always {
  gsettings set $gnome-schema gtk-theme 'Nordic-darker'
  # gsettings set $gnome-schema gtk-theme 'oomox-gruvbox-dark-hard-custom'
  gsettings set $gnome-schema icon-theme 'Tela-nord-dark'
  gsettings set $gnome-schema cursor-theme 'Breeze_Snow'
  gsettings set $gnome-schema font-name 'Fira Sans 11'
  gsettings set org.gnome.desktop.interface gtk-key-theme 'Emacs'
}